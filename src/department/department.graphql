type Department {
  id: Int
  isRoot: Boolean
  name: String
  headRoleName: String
  user: User
  children: [Department]
  parent: Department
  parentId: Int
  directChildrenCount: Int
  totalChildrenCount: Int
}

input DepartmentInput {
  id: Int
  isRoot: Boolean
  name: String
  headRoleName: String
  parentId: Int
  userId: Int
}

type Query {
  getDanglingDepartments: [Department]
  getTopDepartments: [Department]
  getDepartments: [Department]
  getChildren(id: ID!): [Department]
  department(id: ID!): Department
}

type Mutation {
  createDepartment(department: DepartmentInput): Department,
  updateDepartment(id: ID!, department: DepartmentInput): Department,
  deleteDepartment(id: ID!): Boolean
}
